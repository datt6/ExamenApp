@model AplicacionWebNomina.Models.OrdenCompra

@{
    ViewBag.Title = "Registrar Orden";
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Registrar Orden</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            background-color: #2E2E2E;
            color: #FFFFFF;
            margin: 0;
            padding: 20px;
        }

        .container {
            background-color: #333333;
            border-radius: 8px;
            padding: 20px;
            max-width: 1000px;
            margin: auto;
        }

        h2 {
            color: #FFD700;
        }

        label {
            display: block;
            margin: 10px 0 5px;
        }

        input[type="text"],
        input[type="number"],
        select {
            width: 100%;
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #555555;
            border-radius: 4px;
            background-color: #444444;
            color: #FFFFFF;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
        }

        table, th, td {
            border: 1px solid #555555;
        }

        th, td {
            padding: 10px;
            text-align: left;
        }

        button {
            background-color: #4CAF50;
            color: white;
            border: none;
            padding: 10px 20px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 16px;
            margin: 10px 5px;
            cursor: pointer;
            border-radius: 4px;
        }

        .cancel {
            background-color: #f44336;
        }

        .message {
            color: #FFD700;
            margin: 10px 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2>Registrar Orden</h2>

        @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
        {
            <p class="message">@ViewBag.ErrorMessage</p>
        }

        @if (!string.IsNullOrEmpty(ViewBag.Mensaje))
        {
            <p class="message">@ViewBag.Mensaje</p>
        }

        @using (Html.BeginForm("RegistrarOrden", "Orden", FormMethod.Post))
        {
            <label for="cliente">Cliente:</label>
            @Html.DropDownList("ClienteId", (SelectList)ViewBag.Clientes, "Seleccione Cliente", new { @class = "form-control" })

            <label for="tienda">Tienda:</label>
            @Html.DropDownList("TiendaId", (SelectList)ViewBag.Tiendas, "Seleccione Tienda", new { @class = "form-control" })

            <label for="empleado">Empleado:</label>
            @Html.DropDownList("EmpleadoId", (SelectList)ViewBag.Empleados, "Seleccione Empleado", new { @class = "form-control" })

            <h3>Detalle de la Orden</h3>
            <table>
                <thead>
                    <tr>
                        <th>Código del Producto</th>
                        <th>Nombre del Producto</th>
                        <th>Precio</th>
                        <th>Cantidad</th>
                        <th>Descuento</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody id="detalleOrdenBody">
                    @for (int i = 0; i < Model.DetalleOrden.Count; i++)
                    {
                        <tr>
                            <td>@Html.TextBoxFor(m => m.DetalleOrden[i].CodigoProducto, new { @class = "form-control" })</td>
                            <td>@Html.TextBoxFor(m => m.DetalleOrden[i].NombreProducto, new { @class = "form-control", @readonly = "readonly" })</td>
                            <td>@Html.TextBoxFor(m => m.DetalleOrden[i].Precio, new { @class = "form-control", @readonly = "readonly" })</td>
                            <td>@Html.TextBoxFor(m => m.DetalleOrden[i].Cantidad, new { @class = "form-control" })</td>
                            <td>@Html.TextBoxFor(m => m.DetalleOrden[i].Descuento, new { @class = "form-control" })</td>
                            <td><button type="button" onclick="removeRow(this)">Eliminar</button></td>
                        </tr>
                    }
                </tbody>
            </table>
            <button type="button" onclick="addRow()">Añadir Producto</button>
            <button type="submit" name="action" value="Guardar">Guardar</button>
            <button type="submit" name="action" value="Cancelar" class="cancel">Cancelar</button>
        }

        <script>
            function addRow() {
                var table = document.getElementById("detalleOrdenBody");
                var rowCount = table.rows.length;
                var row = table.insertRow(rowCount);

                row.innerHTML = `<td><input type="text" name="DetalleOrden[${rowCount}].CodigoProducto" class="form-control" /></td>
                                 <td><input type="text" name="DetalleOrden[${rowCount}].NombreProducto" class="form-control" readonly /></td>
                                 <td><input type="text" name="DetalleOrden[${rowCount}].Precio" class="form-control" readonly /></td>
                                 <td><input type="number" name="DetalleOrden[${rowCount}].Cantidad" class="form-control" /></td>
                                 <td><input type="number" name="DetalleOrden[${rowCount}].Descuento" class="form-control" /></td>
                                 <td><button type="button" onclick="removeRow(this)">Eliminar</button></td>`;
            }

            function removeRow(button) {
                var row = button.parentNode.parentNode;
                row.parentNode.removeChild(row);
            }
        </script>
    </div>
</body>
</html>